---
- name: Get all LUNs from volume {{ volume_name }}
  ansible.builtin.include_role:
    name: sgs.ontap.rest
    tasks_from: info.yml
  vars:
    gather_subset: storage/luns
    fields: '*'
    parameters:
      svm.name: "{{ vserver_sap_fc }}"
      location.volume.name: "{{ volume_name }}"
    result_var: lun_info

- name: Unmap all LUNs in volume {{ volume_name }}
  ansible.builtin.include_role:
    name: sgs.ontap.lun
    tasks_from: map.yml
  vars:
    vserver: "{{ vserver_sap_fc }}"
    path: "{{ item.name }}"
    initiator_group_name: "fcp_{{ destination_server }}_01"
    state: absent
  loop: "{{ lun_info.ontap_info.storage_luns.records }}"
  loop_control:
    label: "{{ item.location.logical_unit }}"
  when: lun_info.ontap_info.storage_luns.num_records > 0

- name: Delete volume {{ volume_name }}
  ansible.builtin.include_role:
    name: sgs.ontap.volume
  vars:
    vserver: "{{ vserver_sap_fc }}"
    state: absent
    name: "{{ volume_name }}"
  when: delete_volume_clone_05 or delete_volume_clone_06

- name: Set new volume name with tobedeleted and date
  set_fact:
    new_volume_name: "{{ volume_name }}_tobedeleted_{{ '%Y%m%d' | strftime((('%s' | strftime | int) + 2592000)) }}"
    initial_volume_name: "{{ volume_name }}"
  when: not delete_volume_clone_06 and lun_info.ontap_info.storage_luns.num_records > 0

- name: Debugging delete_volume_clone_06 and num_records
  debug:
    msg:
      - "delete_volume_clone_06: {{ delete_volume_clone_06 }}"
      - "num_records: {{ lun_info.ontap_info.storage_luns.num_records }}"
      - "rename_volume_clone_05: {{ rename_volume_clone_05 }}"

- name: Rename volume {{ volume_name }}
  ansible.builtin.include_role:
    name: sgs.ontap.volume
  vars:
    vserver: "{{ vserver_sap_fc }}"
    name: "{{ new_volume_name }}"
    from_name: "{{ initial_volume_name }}"
  when:
    - not delete_volume_clone_06
    - lun_info.ontap_info.storage_luns.num_records > 0
    - rename_volume_clone_05
